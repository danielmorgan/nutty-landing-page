---
import Layout from "../layouts/Layout.astro";
import Sky from "../components/Sky.astro";
import HeroSection from "../components/HeroSection.astro";
import NuttyScene from "../components/NuttyScene.astro";
import StepsSection from "../components/StepsSection.astro";
import ADHDTraitsSection from "../components/ADHDTraitsSection.astro";
import TestimonialsSection from "../components/TestimonialsSection.astro";
import BottomCTASection from "../components/BottomCTASection.astro";
import FooterSection from "../components/FooterSection.astro";

const year = new Date().getFullYear();
---

<Layout title="Rule: The ADHD Savings App That's Actually Fun">
  <div class="shadow-stacked mx-auto rounded-2xl p-0">
    <div
      class="relative container mx-auto overflow-hidden rounded-t-2xl bg-white pt-4 md:pt-8"
    >
      <div class="absolute inset-0 z-0 flex">
        <Sky />
      </div>
      <div class="relative z-10">
        <HeroSection />
      </div>
    </div>

    <div class="bg-white">
      <NuttyScene />
    </div>

    <div class="relative z-10 container mx-auto bg-yellow-100 py-8">
      <h2
        class="text-grey-800 mx-auto max-w-lg text-center text-2xl text-balance"
      >
        Turn Money Management into a Game, with a Squirrel by your Side.
      </h2>
    </div>

    <div class="container mx-auto bg-white py-8 sm:py-16">
      <StepsSection />
    </div>

    <div class="container mx-auto bg-yellow-100 py-16">
      <div class="text-grey-800 mx-auto max-w-lg text-center">
        <h2 class="text-2xl text-balance">Rule is ADHD-friendly</h2>
        <h3 class="mt-4 text-lg text-balance sm:text-xl">
          Whether you're diagnosed, self-identified, waiting for assessment, or
          just relate to some ADHD features&mdash;Rule makes money feel natural
          and fun.
        </h3>
      </div>

      <div class="mt-8 flex flex-col gap-16">
        <ADHDTraitsSection />
        <TestimonialsSection />
      </div>
    </div>

    <div class="container mx-auto overflow-hidden bg-white">
      <BottomCTASection />
    </div>

    <div class="bg-forest-500 container mx-auto py-8">
      <FooterSection />
    </div>

    <div class="bg-forest-600 container mx-auto rounded-b-2xl py-2 sm:py-4">
      <div class="flex items-center justify-between">
        <p class="text-sm text-white">&copy; Rule Finance Ltd {year}</p>
        <img
          id="acorn-sticker-trigger"
          src="images/acorn-sticker.png"
          alt="Acorn sticker"
          class="h-8 cursor-pointer"
        />
      </div>
    </div>
  </div>
</Layout>

<script>
  import {
    triggerAcornRain,
    triggerKonamiAcornRain,
  } from "../scripts/particleSystem.js";

  const acornSticker = document.getElementById("acorn-sticker-trigger");
  if (acornSticker) {
    acornSticker.addEventListener("click", triggerAcornRain); // Keep original single-click behavior if desired, or remove
    let tapCount = 0;
    let lastTapTime = 0;
    const TAP_THRESHOLD = 7; // Number of taps required
    const TIME_WINDOW = 1500; // Milliseconds - adjust as needed

    acornSticker.addEventListener("click", (event) => {
      const currentTime = new Date().getTime();

      if (currentTime - lastTapTime < TIME_WINDOW) {
        tapCount++;
      } else {
        // Reset if tap is outside the time window or if it's the first tap
        tapCount = 1;
      }
      lastTapTime = currentTime;

      if (tapCount >= TAP_THRESHOLD) {
        triggerKonamiAcornRain();
        tapCount = 0; // Reset after triggering
      } else {
        // If you want the single tap to still trigger the normal rain:
        if (tapCount === 1 && !(currentTime - lastTapTime < TIME_WINDOW)) {
          // ensure it's a "fresh" single tap
          triggerAcornRain(event);
        }
      }
    });
  }

  // Konami Code Easter Egg
  const konamiCode = [
    "ArrowUp",
    "ArrowUp",
    "ArrowDown",
    "ArrowDown",
    "ArrowLeft",
    "ArrowRight",
    "ArrowLeft",
    "ArrowRight",
    "b",
    "a",
  ];
  let konamiIndex = 0;

  document.addEventListener("keydown", (event) => {
    if (event.key === konamiCode[konamiIndex]) {
      konamiIndex++;
      if (konamiIndex === konamiCode.length) {
        triggerKonamiAcornRain();
        konamiIndex = 0; // Reset for future attempts
      }
    } else {
      // If the key is wrong, reset progress, but if it's the start of the code, count it.
      if (event.key === konamiCode[0]) {
        konamiIndex = 1;
      } else {
        konamiIndex = 0;
      }
    }
  });
</script>
